<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on 0m3g4K0d3r&#39;s Security Blog</title>
    <link>https://omega-coder.ninja/tags/tutorial/</link>
    <description>Recent content in tutorial on 0m3g4K0d3r&#39;s Security Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>admin@omega-coder.me (omega_coder)</managingEditor>
    <webMaster>admin@omega-coder.me (omega_coder)</webMaster>
    <lastBuildDate>Mon, 01 Apr 2019 23:46:29 +0200</lastBuildDate>
    
	<atom:link href="https://omega-coder.ninja/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setup FTPS server on Archlinux</title>
      <link>https://omega-coder.ninja/post/setup-ftp-and-ftps-server-on-archlinux-server/</link>
      <pubDate>Mon, 01 Apr 2019 23:46:29 +0200</pubDate>
      <author>admin@omega-coder.me (omega_coder)</author>
      <guid>https://omega-coder.ninja/post/setup-ftp-and-ftps-server-on-archlinux-server/</guid>
      <description>History of FTP servers The original specification for the File Transfer Protocol was written by Abhay Bhushan and published as RFC 114 on 16 April 1971. Until 1980, FTP was still running on NCP (Network Control Program) the predecessor of TCP/IP, the protocol was later replaced by a TCP/IP version, RFC 765 (June 1980). On September 1998, RFC 2428 added IPv6 support and defined a new type of passive mode.</description>
    </item>
    
    <item>
      <title>Streaming server using NGINX and nginx-rtmp-module</title>
      <link>https://omega-coder.ninja/post/streaming-server-using-nginx-and-nginx-rtmp-module/</link>
      <pubDate>Tue, 18 Dec 2018 01:55:45 +0200</pubDate>
      <author>admin@omega-coder.me (omega_coder)</author>
      <guid>https://omega-coder.ninja/post/streaming-server-using-nginx-and-nginx-rtmp-module/</guid>
      <description>Introduction Most people who do streaming enjoy services like Twitch.tv in order to deliver video for viewers, which is a pretty good solution, but when it comes to having more control over your streams, or when you take in consideration the ability of people streaming to your server, or you want to stream to multiple places, or any other things that require having access to an actual RTMP stream from an RTMP server.</description>
    </item>
    
  </channel>
</rss>